type Test {
  # A list of direct forked repositories.
  forks(
    # Affiliation options for repositories returned from the connection
    affiliations: [RepositoryAffiliation] = [OWNER, COLLABORATOR]

    # Returns the elements in the list that come after the specified global ID.
    after: String

    # Returns the elements in the list that come before the specified global ID.
    before: String

    # Returns the first _n_ elements from the list.
    first: Int

    # If non-null, filters repositories according to whether they have been locked
    isLocked: Boolean

    # Returns the last _n_ elements from the list.
    last: Int

    # Ordering options for repositories returned from the connection
    orderBy: RepositoryOrder

    # If non-null, filters repositories according to privacy
    privacy: RepositoryPrivacy
  ): RepositoryConnection!

  # A list of users who are members of this team.
  members(
    # Returns the elements in the list that come after the specified global ID.
    after: String

    # Returns the elements in the list that come before the specified global ID.
    before: String

    # Returns the first _n_ elements from the list.
    first: Int

    # Returns the last _n_ elements from the list.
    last: Int

    # Filter by membership type
    membership: TeamMembershipType = ALL

    # The search string to look for.
    query: String

    # Filter by team member role
    role: TeamMemberRole
  ): TeamMemberConnection!

  # The HTTP path for the team' members
  membersResourcePath: URI!
}
